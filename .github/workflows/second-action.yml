# Name of the workflow as it will appear in the GitHub Actions UI.
name: Deploy Project

# Specifies the events that trigger the workflow.
# 'push' runs the workflow whenever new code is pushed to the repository.
# 'workflow_dispatch' allows you to manually trigger the workflow from the GitHub Actions UI.
on: [push, workflow_dispatch]

# Jobs define the individual tasks the workflow will perform.
jobs:
  # First job: Running tests to ensure the code works as expected.
  test:
    # The virtual machine environment for this job. Using the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # Steps are the individual commands or actions to run within this job.
    steps:
      # Step 1: Check out the repository code into the runner.
      # This fetches the latest version of the repository to the virtual machine.
      - name: Checkout Code
        uses: actions/checkout@v3
      
      # Step 2: Set up Node.js environment for the project.
      # 'uses: actions/setup-node@v3' installs Node.js (version 18 in this case).
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # Step 3: Install project dependencies.
      # 'npm ci' ensures a clean, consistent install using the package-lock.json file.
      - name: Install Dependencies
        run: npm ci 
        
      # Step 4: Run the project's test suite.
      # Executes the 'test' script defined in the project's package.json.
      - name: Run Tests
        run: npm test

  # Second job: Build and deploy the project.
  deploy:
    # Define dependencies between jobs. The 'deploy' job depends on the 'test' job.
    # This ensures the 'deploy' job only runs if the 'test' job is successful.
    needs: test

    # The virtual machine environment for this job. Also using Ubuntu.
    runs-on: ubuntu-latest

    # Steps for the deployment job.
    steps:
      # Step 1: Check out the repository code into the runner.
      # Re-fetches the repository in case changes were made during the 'test' job.
      - name: Checkout Code
        uses: actions/checkout@v3
      
      # Step 2: Set up Node.js environment for the project.
      # Reinstalls Node.js (version 18) to ensure the environment is consistent.
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      # Step 3: Install project dependencies.
      # Installs dependencies required for the build and deployment process.
      - name: Install Dependencies
        run: npm ci 
      
      # Step 4: Build the project.
      # Executes the 'build' script from package.json to prepare files for deployment.
      - name: Build Project
        run: npm run build
      
      # Step 5: Deploy the project.
      # Replace the echo statement with the actual deployment commands (e.g., uploading files to a server).
      - name: Deploy
        run: echo "Deploying..."
