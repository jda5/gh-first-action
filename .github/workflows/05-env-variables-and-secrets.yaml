name: Deployment
on:
  push:
    branches:
      - main
      - dev

# Define global environment variables accessible in all jobs.
env:
  MONGODB_DB_NAME: gha-demo  # This variable is available across all jobs.

jobs:
  test:
    # Define job-specific environment variables, including secrets.
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.abcde.mongodb.net  # Publicly accessible cluster address.
      MONGODB_USER: ${{ secrets.MONGODB_USER }}  # Secret stored securely in GitHub repository settings.
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}  # Another secret for authentication.
      MONGODB_PORT: 8080  # Example of a hardcoded job-specific variable.

    runs-on: ubuntu-latest

    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run server
        # Use a port variable (`$PORT`) to dynamically reference environment variables in your commands.
        run: npm start & npx wait-on http://127.0.0.1:$PORT

      - name: Run tests
        run: npm test

      - name: Output information
        # Demonstrates how to access environment variables.
        run: |
          echo "MONGODB_USER: ${{ env.MONGODB_USER}}"  # Output a secret value for debugging (use cautiously!).
          echo "MONGODB_DB_NAME: ${{ env.MONGODB_DB_NAME}}"  # Output a global environment variable.

  deploy:
    needs: test  # Ensures the deploy job runs only after the test job completes.
    runs-on: ubuntu-latest

    steps:
      - name: Output information
        # Example showing how to reference and use environment variables in deployment.
        run: |        
          echo "Deploying to cluster: ${{ env.MONGODB_CLUSTER_ADDRESS }}"
          echo "Database name: ${{ env.MONGODB_DB_NAME }}"
